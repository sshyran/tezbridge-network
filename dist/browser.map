{"version":3,"sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/defineProperty.js","types.js","util.js","PsddFKi3/api.js","external.js","index.js"],"names":["safeProp","x","props","result","prop","undefined","curr","shift","Object","Array","prop_index","parseInt","isNaN","checkProps","obj","cursor","filterHashUrl","indexOf","start","end","slice","length","OpStep","main_fn","next_nodes","args","apply","run","Promise","then","catch","err","Gets","fetch","path","sub_path","head","header","address","hash_url","hash","contract_bytes","Posts","submit","data_json","type_json","param","head_hash","ops","branch","contents","protocol","signature","signed_op","Mixed","op_params","counter","source","counter_prev","manager_key","reveal","params","public_key","kind","push","assign","manager_pkh","forEach","item","op","origination","transaction","destination","toString","forge_operation","operation_hex","basic","op_param","makeOperationBytes","fee","gas_limit","storage_limit","amount","managerPubkey","balance","External","net_type","spendable","url","domain","operations","type","inner_op","tz1","tz","TezBridgeNetwork","RPCFn","data","method","resolve","reject","req","XMLHttpRequest","addEventListener","pe","status","JSON","parse","responseText","open","setRequestHeader","send","stringify","APIs","PsddFKi3","PsddFKi3_API","host","get","call","post","mixed","external"],"mappings":"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","file":"browser.map","sourceRoot":"../src","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","// @flow\n\nexport type TezJSON =\n| number\n| string\n| boolean\n| void\n| {[string]: TezJSON}\n| Array<TezJSON>\n\nexport function safeProp(x : TezJSON, ...props : Array<string | number>) {\n  let result = undefined\n\n  let prop\n  let curr = x\n  while (true) {\n    prop = props.shift()\n    if (prop === undefined)\n      break\n\n    if (curr instanceof Object && !(curr instanceof Array)) {\n      result = curr[prop]\n      curr = curr[prop]\n    } else if (curr instanceof Array) {\n      const prop_index = parseInt(prop)\n      if (isNaN(prop_index))\n        return undefined\n\n      result = curr[prop_index]\n      curr = curr[prop_index]\n    } else {\n      return undefined\n    }\n  }\n\n  return result\n}\n\nexport type RPCFunc = (url: string, data?: TezJSON, method: 'POST' | 'GET') => Promise<TezJSON>\nexport type GetRPCFunc = (url: string, data?: TezJSON) => Promise<TezJSON>\nexport type PostRPCFunc = (url: string, data: TezJSON) => Promise<TezJSON>\n","// @flow\n\nexport function checkProps(obj : Object, ...props : Array<string>) {\n  let prop = props.shift()\n  let cursor = obj\n  while (prop !== undefined) {\n    if (!(prop in cursor) || cursor[prop] === undefined)\n      throw `Property: ${prop} is not in the object`\n\n    prop = props.shift()\n    cursor = cursor[prop]\n  }\n}\n\nexport function filterHashUrl(x : string) {\n  if (x.indexOf('/') === -1)\n    throw \"The input hash_url should be in this format: `xx/xx/xx/xx/xx/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`\"\n\n  const start = x[0] === '/' ? 1 : 0\n  const end = x.slice(-1) === '/' ? -1 : x.length\n\n  return x.slice(start, end)\n}\n\nexport class OpStep {\n  main_fn: any => any\n  next_nodes: Array<OpStep>\n\n  constructor(main_fn : any => any, ...next_nodes : Array<OpStep>) {\n    this.main_fn = main_fn\n    this.next_nodes = next_nodes\n  }\n\n  run(...args : Array<any>) {\n    const result = this.main_fn.apply(this, args)\n    if (typeof result === 'boolean') {\n      if (result) \n        return this.next_nodes[0] && this.next_nodes[0].run()\n      else\n        return this.next_nodes[1] && this.next_nodes[1].run()\n    }\n\n    if (result instanceof Promise) {\n      return result.then(x => this.next_nodes[0] && this.next_nodes[0].run(x))\n      .catch(err => {\n        throw `OpStep error caught: ${err}`\n      })\n    }\n  }\n}","// @flow\n\nimport type { GetRPCFunc, PostRPCFunc, TezJSON } from '../types'\nimport { safeProp } from '../types'\nimport { checkProps, filterHashUrl, OpStep } from '../util'\n\n\nexport class Gets {\n  fetch : GetRPCFunc\n\n  constructor(fetch : GetRPCFunc) {\n    this.fetch = fetch\n  }\n  custom(path : string) {\n    return this.fetch(path)\n  }\n  head(sub_path? : string) {\n    return this.fetch(`/chains/main/blocks/head/${sub_path || ''}`)\n  }\n  hash() {\n    return this.head('hash')\n  }\n  header() {\n    return this.head('header')\n  }\n  protocol() {\n    return this.header().then(x => safeProp(x, 'protocol'))\n  }\n  predecessor() {\n    return this.header().then(x => safeProp(x, 'predecessor'))\n  }\n  balance(address : string) {\n    return this.fetch(`/chains/main/blocks/head/context/contracts/${address}/balance`)\n  }\n  contract(address : string) {\n    return this.fetch(`/chains/main/blocks/head/context/contracts/${address}`)\n  }\n  contract_bytes(hash_url : string, sub_path? : string) {\n    const hash = filterHashUrl(hash_url)\n    return this.fetch(`/chains/main/blocks/head/context/raw/bytes/contracts/index/originated/${hash}${sub_path || ''}`)\n  }\n  storage_bytes(hash_url : string) {\n    return this.contract_bytes(hash_url, '/data/storage')\n  }\n  big_map_bytes(hash_url : string) {\n    return this.contract_bytes(hash_url, '/big_map')\n  }\n  manager_key(address : string) {\n    return this.fetch(`/chains/main/blocks/head/context/contracts/${address}/manager_key`)\n  }\n  counter(address : string) {\n    return this.fetch(`/chains/main/blocks/head/context/contracts/${address}/counter`)\n  }\n\n}\n\nexport class Posts {\n  submit : PostRPCFunc\n\n  constructor(submit : PostRPCFunc) {\n    this.submit = submit\n  }\n\n  pack_data(data_json : TezJSON, type_json : TezJSON) {\n    const param = {\"data\": data_json,\"type\":type_json, \"gas\": \"400000\"}\n    return this.submit(`/chains/main/blocks/head/helpers/scripts/pack_data`, param)\n               .then(x => safeProp(x, 'packed'))\n  }\n\n  forge_operation(head_hash : string, ops : TezJSON) {\n    const param = {\n      branch: head_hash,\n      contents: ops\n    }\n    return this.submit(`/chains/main/blocks/head/helpers/forge/operations`, param)\n  }\n\n  preapply_operation(head_hash : string, ops : TezJSON, protocol : string, signature : string) {\n    const param = {\n      branch: head_hash,\n      contents: ops,\n      protocol,\n      signature\n    }\n    return this.submit(`/chains/main/blocks/head/helpers/preapply/operations`, [param])\n  }\n\n  inject_operation(signed_op : string) {\n    return this.submit('/injection/operation', signed_op)\n  }\n}\n\n\nexport class Mixed {\n  fetch: Gets\n  submit: Posts\n\n  constructor(fetch: Gets, submit: Posts) {\n    this.fetch = fetch\n    this.submit = submit\n  }\n\n  static params = {\n    reveal(source: string, public_key: string, counter: string) {\n      return {\n        kind: 'reveal',\n        source,\n        fee: '1300',\n        gas_limit: '10000',\n        storage_limit: '0',\n        public_key,\n        counter\n      }\n    },\n    transaction(source: string, destination: string, counter: string) {\n      return {\n        kind: 'transaction',\n        source,\n        fee: '400000',\n        gas_limit: '400000',\n        storage_limit: '60000',\n        amount: '0',\n        counter,\n        destination,\n        // parameters?: $micheline.michelson_v1.expression\n      }\n    },\n    origination(source: string, manager_key: string, counter: string) {\n      return {\n        kind: 'origination',\n        source,\n        fee: '400000',\n        counter,\n        gas_limit: '400000',\n        storage_limit: '60000',\n        managerPubkey: manager_key,\n        balance: '0',\n        // \"spendable\"?: boolean,\n        // \"delegatable\"?: boolean,\n        // \"delegate\"?: $Signature.Public_key_hash,\n        // \"script\"?: $scripted.contracts\n      }\n    }\n  }\n\n  async makeOperationBytes(param: {\n    source : string,\n    public_key: string\n  }, op_params: Array<{\n    kind : 'reveal' | 'origination' | 'transaction',\n    destination? : string\n  }>) {\n    const ops : Array<TezJSON> = []\n    const counter_prev = await this.fetch.counter(param.source)\n    const manager_key = await this.fetch.manager_key(param.source)\n\n    if (typeof counter_prev !== 'string')\n      throw 'Invalid counter'\n\n    let counter = parseInt(counter_prev) + 1 + ''\n\n    if (!safeProp(manager_key, 'key')) {\n      const reveal = Mixed.params.reveal(param.source, param.public_key, counter)\n\n      if (op_params.length && op_params[0].kind === 'reveal')\n        ops.push(Object.assign({}, reveal, op_params.shift()))\n      else\n        ops.push(reveal)\n\n      counter = parseInt(counter) + 1 + ''\n    }\n\n    const manager_pkh = safeProp(manager_key, 'manager')\n    if (typeof manager_pkh !== 'string')\n      throw 'Invalid manager public key hash'\n\n    op_params.forEach(item => {\n      const op = {\n        reveal: null,\n        origination: Object.assign(\n          {},\n          Mixed.params.origination(param.source, manager_pkh, counter),\n          item\n        ),\n        transaction: Object.assign(\n          {},\n          Mixed.params.transaction(param.source, item.destination || '', counter),\n          item\n        )\n      }[item.kind]\n\n      if (!op)\n        throw `Invalid t(${item.kind}) in makeOperationBytes`\n\n      ops.push(op)\n      counter = parseInt(counter) + 1 + ''\n    })\n\n    const head_hash = await this.fetch.hash()\n\n    if (!(typeof head_hash === 'string'))\n      throw `Error type for head_hash result: ${head_hash.toString()}`\n\n    const operation_hex = await this.submit.forge_operation(head_hash, ops)\n    const protocol = await this.fetch.protocol()\n\n    return {\n      protocol,\n      operation_hex,\n      branch: head_hash,\n      contents: ops\n    }\n  }\n\n  async makeOriginationBytes(basic : {\n    source : string,\n    public_key: string\n  }, op_param : Object) {\n    return this.makeOperationBytes({\n      source: basic.source,\n      public_key: basic.public_key\n    }, [Object.assign({\n      kind: 'origination'\n    }, op_param)])\n  }\n\n  async makeTransactionBytes(basic : {\n    source : string,\n    public_key: string\n  }, op_param : Object) {\n    return this.makeOperationBytes({\n      source: basic.source,\n      public_key: basic.public_key\n    }, [Object.assign({\n      kind: 'transaction'\n    }, op_param)])\n  }\n}\n\nexport default { Gets, Posts, Mixed }","// @flow\nimport type { GetRPCFunc, PostRPCFunc, TezJSON } from './types'\n\nexport class External {\n  fetch: GetRPCFunc\n  net_type: 'mainnet' | 'alphanet'\n\n  constructor(fetch : GetRPCFunc, net_type : string) {\n    this.fetch = fetch\n    this.net_type = net_type === 'alphanet' ? net_type : 'mainnet'\n  }\n\n  domain() {\n    if (this.net_type === 'mainnet')\n      return 'https://api1.tzscan.io/v3'\n    else if (this.net_type === 'alphanet')\n      return 'https://api.alphanet.tzscan.io/v3'\n    else\n      throw 'The net type can only be mainnet or alphanet'\n  }\n\n  async originated_contracts(address : string, spendable : boolean = true) {\n    const url = this.domain() + `/operations/${address}?type=Origination`\n    const operations  = await this.fetch(url)\n    const result = []\n    if (operations instanceof Array) \n      operations.forEach(op => {\n        op.type.operations.forEach(inner_op => {\n          if (inner_op.spendable === spendable)\n            result.push(inner_op.tz1.tz)\n        })\n      })\n    else\n      throw 'Operations is invalid'\n\n    return result\n  }\n\n}","// @flow\n\nconst RPCFn = (() => {\n  if (process.env.NODE_ENV === 'browser') {\n    return (url, data, method) => {\n      return new Promise<TezJSON>((resolve, reject) => {\n        const req = new XMLHttpRequest()\n        req.addEventListener('load', (pe: ProgressEvent) => {\n          if (req.status === 200)\n            resolve(JSON.parse(req.responseText))\n          else\n            reject(req.responseText)\n        })\n        req.addEventListener('error', reject)\n        req.addEventListener('abort', reject)\n        req.open(method, url)\n        if (method === 'POST') {\n          req.setRequestHeader('Content-Type', 'application/json')\n        }\n        req.send(JSON.stringify(data))\n      })\n    }\n  } else {\n    const https = require('https')\n    const url = require('url')\n    return (raw_url: string, data?: TezJSON, method: 'POST' | 'GET') => {\n      return new Promise<TezJSON>((resolve, reject) => {\n        const parsed_url = url.parse(raw_url)\n        const options = {\n          hostname: parsed_url.hostname,\n          port: parsed_url.port,\n          path: parsed_url.path,\n          method,\n          headers: raw_url.indexOf('tzscan.io/v3') > -1 ? {} : {\n            'Content-Type': 'application/json'\n          }\n        }\n\n        const req = https.request(options, (res) => {\n          let data = ''\n          res.on('data', (d) => {\n            data += d.toString()\n          })\n\n          res.on('end', () => {\n            try {\n              resolve(JSON.parse(data))\n            } catch(err) {\n              console.log('\\x1b[31m%s\\x1b[0m','RPC result JSON.parse error: ', data)\n            }\n          })\n        })\n\n        req.on('error', (e) => {\n          reject(e)\n        })\n\n        if (method === 'POST') {\n          req.write(JSON.stringify(data))\n        }\n\n        req.end()\n      })\n    }\n  }\n})()\n\nimport PsddFKi3_API from './PsddFKi3/api'\nimport { External } from './external'\nimport type { RPCFunc, TezJSON } from './types'\n\nconst APIs = {\n  PsddFKi3: PsddFKi3_API\n}\n\nexport class TezBridgeNetwork {\n  host: string\n  RPCFn: RPCFunc\n  net_type: 'mainnet' | 'alphanet'\n  fetch: PsddFKi3_API.Gets\n  submit: PsddFKi3_API.Posts\n  mixed: PsddFKi3_API.Mixed\n  external: External\n\n  constructor(params : {\n    host: string, \n    protocol?: string,\n  }) {\n    if (!params.host)\n      throw \"Please set the host parameter\"\n\n    this.host = params.host\n    this.RPCFn = RPCFn\n    this.net_type = this.host.indexOf('alphanet') > -1 ? 'alphanet' : 'mainnet'\n\n    const protocol = params.protocol || 'PsddFKi3'\n\n    if (!(protocol in APIs)) {\n      throw `Protocol:${protocol} doesn't exist in protocols`\n    }\n\n    this.fetch = new APIs[protocol].Gets((url, data) => this.get.call(this, url, data))\n    this.submit = new APIs[protocol].Posts((url, data) => this.post.call(this, url, data))\n    this.mixed = new APIs[protocol].Mixed(this.fetch, this.submit)\n    this.external = new External((url, data) => this.RPCFn(url, data, 'GET'), this.net_type)\n  }\n\n  switchProtocol(protocol : string) {\n    if (!(protocol in APIs)) {\n      throw `Protocol:${protocol} doesn't exist in protocols`\n    }\n    \n    this.fetch = new APIs[protocol].Gets((url, data) => this.get.call(this, url, data))\n    this.submit = new APIs[protocol].Posts((url, data) => this.post.call(this, url, data))\n    this.mixed = new APIs[protocol].Mixed(this.fetch, this.submit)\n  }\n\n  get(url: string, data?: TezJSON) {\n    return this.RPCFn(this.host + url, data, 'GET')\n  }\n\n  post(url: string, data: TezJSON) {\n    return this.RPCFn(this.host + url, data, 'POST')\n  }\n}\n\nexport default TezBridgeNetwork"]}